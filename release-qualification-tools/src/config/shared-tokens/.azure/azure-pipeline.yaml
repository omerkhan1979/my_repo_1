trigger:
  batch: true
  branches:
    include:
    - master
    - release/*

pr:
  branches:
    include:
    - master
    - release/*

resources:
  repositories:
  - repository: argo-deploy
    type: github
    name: takeoff-com/argo-deploy
    ref: master
    endpoint: takeoff-com
  - repository: sre-azure-devops-templates
    type: github
    name: takeoff-com/sre-azure-devops-templates
    endpoint: takeoff-com

variables:
  vmImageName: 'ubuntu-20.04'
  countBuild: $[ counter(variables['Build.SourceBranch'], 0) ]
  serviceName: shared-tokens
  chartPath: helm/$(serviceName)

stages:
  - template: templates/sre-checks.yaml@sre-azure-devops-templates
    parameters:
      helm_version: 3
      charts:
        ${{ variables.serviceName }}: ${{ variables.chartPath }}

  - stage: Release
    dependsOn: [SRE_Checks]
    jobs:
    - job: Release
      pool:
        vmImage: $(vmImageName)
      steps:
      - bash: .azure/version.sh
        displayName: Setting version number
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'takeoffbot_tkf_pat'
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'userSpecifiedTag'
          tag: $(tagId)
          title: "$(tagId)"
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'commitBased'

  - stage: SimulateArgoDeploy
    dependsOn: [Release]
    jobs:
      - job: PretendToBeUpdatingArgo
        pool:
          vmImage: $(vmImageName)
        steps:
        - checkout: self
        - bash: cd shared-tokens && .azure/version.sh
          displayName: Setting version number
        - checkout: argo-deploy
          persistCredentials: true
        - bash: |
              set -ex
              cd argo-deploy
              git remote -v
              git remote update
              git fetch 
              git checkout master
              sudo snap install yq
              yq eval '.version = "$(tagId)"' -i applications/SRE/shared-tokens.yml
              cat applications/SRE/shared-tokens.yml

  - stage: ArgoDeploy
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    dependsOn: [Release]
    jobs:
      - job: GitPush
        pool:
          vmImage: $(vmImageName)
        steps:
        - checkout: self
        - bash: cd shared-tokens && .azure/version.sh
          displayName: Setting version number
        - checkout: argo-deploy
          persistCredentials: true
        - bash: |
              cd argo-deploy
              git remote -v
              git remote update
              git fetch 
              git checkout master
              git config --global user.email "takeoffbot@takeoff.com"
              git config --global user.name "Takeoffbot"
              sudo snap install yq
              yq eval '.version = "$(tagId)"' -i applications/SRE/shared-tokens.yml
              git add . && git commit -m "[shared tokens] deploy a new version: $(tagId)"
              git push
        - bash: echo "##vso[task.setvariable variable=PipelineStatus;isOutput=true]OK"
          name: setPipelineStatus

  - stage: Notification
    dependsOn: [ArgoDeploy]
    condition: and(always(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: SlackNotification
        variables:
            pipelineStatus: $[ stageDependencies.ArgoDeploy.GitPush.outputs['setPipelineStatus.PipelineStatus'] ]
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: export
            displayName: print env vars
          - bash: .azure/version.sh
            displayName: Set version number
          ### webhook for sending to the #customer-centric-notifications Slack channel
          - bash: .azure/slack_notification.sh
            env:
              TAG_ID: $(tagId)
              SLACK_WEBHOOK: $(SLACK_WEBHOOK)
              BRANCH: $(branch)
              AUTHOR: $(BUILD_SOURCEVERSIONAUTHOR)
            displayName: Send Slack notification
